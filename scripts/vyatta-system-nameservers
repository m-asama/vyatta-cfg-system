#!/bin/bash
#
# Module: vyatta-system-nameservers
#
# **** License ****
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# This code was originally developed by Vyatta, Inc.
# Portions created by Vyatta are Copyright (C) 2008 Vyatta, Inc.
# All Rights Reserved.
#
# Author: Mohit Mehta
# Date: September 2008
# Description: CLI back-end script for setting/deleting system nameservers
#
# **** End License ****
#

print_usage() {
    echo "Usage:"
    echo -e "\t$0 update <ip of name-server>"
    echo -e "\t$0 delete <ip of name-server>"
}

restart_dnsmasq () {
    # restart dnsmasq if dns-forwarding is configured
    if cli-shell-api existsActive service dns forwarding; then
        /opt/vyatta/sbin/vyatta-dns-forwarding.pl --update-dnsforwarding >&/dev/null
    fi
}

restart_ntp () {
    # restart ntp if ntp is configured
    if [ -f /etc/ntp.conf ] && grep -q "^server" /etc/ntp.conf; then
        /usr/sbin/invoke-rc.d ntp restart >&/dev/null
    fi
}

restart_systemd_resolved () {
    /usr/bin/systemctl restart systemd-resolved.service
}

system_nameservers () {
    action=$1
    nameserver=$2
    resolvedconfd="/etc/systemd/resolved.conf.d"
    resolvedconf="${resolvedconfd}/vyos-cli.conf"
    if [ ! -d $resolvedconfd ]; then
        mkdir -p $resolvedconfd
    fi
    if [ ! -f $resolvedconf ]; then
        touch $resolvedconf
    fi
    currents=$(grep ^DNS= $resolvedconf | cut -d= -f2)
    nameservers=()
    for current in $currents; do
        if [ $nameserver != $current ]; then
            nameservers+=($current)
        fi
    done
    if [ "$action" = "update" ]; then
        nameservers+=($nameserver)
    fi
    echo "[Resolve]" > ${resolvedconf}.tmp
    echo "DNS=${nameservers[@]}" >> ${resolvedconf}.tmp
    mv -f ${resolvedconf}.tmp $resolvedconf
    restart_systemd_resolved
    restart_dnsmasq
    restart_ntp
}

#
# main
#

case "$1" in
    update)
        if [ $# -ne 2 ]; then
            print_usage
            exit 1
        fi
        system_nameservers $1 $2
        exit 0
        ;;

    delete)
        if [ $# -ne 2 ]; then
            print_usage
            exit 1
        fi
        system_nameservers $1 $2
        exit 0
        ;;

    *)
        print_usage
        exit 1
        ;;
esac
